{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v1/activepond": {
            "get": {
                "description": "Get list of active pond",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activepond"
                ],
                "summary": "Get list of active pond",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an active pond",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activepond"
                ],
                "summary": "Update an active pond",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated Active Pond data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivePond"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new active pond",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activepond"
                ],
                "summary": "Add a new active pond",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New Active Pond data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddActivePond"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/activepond/{id}": {
            "get": {
                "description": "Get an active pond by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activepond"
                ],
                "summary": "Get an active pond by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Active Pond ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/activity": {
            "put": {
                "description": "Update an activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Update an activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated Activity data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivityWithSellDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new activity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Add a new activity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New Activity data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateActivityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/activity/{id}": {
            "get": {
                "description": "Get an activity by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activity"
                ],
                "summary": "Get an activity by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Activity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Login user with provided credentials and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Register a new user with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/bill": {
            "put": {
                "description": "Update an existing bill with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bill"
                ],
                "summary": "Update an existing bill",
                "parameters": [
                    {
                        "description": "Bill data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new bill with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bill"
                ],
                "summary": "Add a new bill",
                "parameters": [
                    {
                        "description": "Bill data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddBill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/bill/{id}": {
            "get": {
                "description": "Get a bill by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bill"
                ],
                "summary": "Get bill by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Bill ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/client": {
            "get": {
                "description": "Retrieve details of the currently logged-in client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Get client details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update details of the currently logged-in client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Update client details",
                "parameters": [
                    {
                        "description": "Client data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Client"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new client with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Add a new client",
                "parameters": [
                    {
                        "description": "Client data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddClient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/dailyfeed": {
            "put": {
                "description": "Update details of a daily feed entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dailyfeed"
                ],
                "summary": "Update daily feed entry",
                "parameters": [
                    {
                        "description": "Daily Feed data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DailyFeed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new daily feed entry with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dailyfeed"
                ],
                "summary": "Add a new daily feed entry",
                "parameters": [
                    {
                        "description": "Daily Feed data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddDailyFeed"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/dailyfeed/{id}": {
            "get": {
                "description": "Retrieve details of a specific daily feed entry by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dailyfeed"
                ],
                "summary": "Get daily feed entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Daily Feed ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/farm": {
            "put": {
                "description": "Update details of a farm entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farm"
                ],
                "summary": "Update farm entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Farm data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Farm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new farm entry with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farm"
                ],
                "summary": "Add a new farm entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Farm data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddFarm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/farm/{id}": {
            "get": {
                "description": "Retrieve details of a specific farm by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farm"
                ],
                "summary": "Get farm by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/farmGroup": {
            "put": {
                "description": "Update details of a farm group entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farmGroup"
                ],
                "summary": "Update farm group entry",
                "parameters": [
                    {
                        "description": "Farm group data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FarmGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new farm group entry with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farmGroup"
                ],
                "summary": "Add a new farm group entry",
                "parameters": [
                    {
                        "description": "Farm group data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddFarmGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/farmGroup/{id}": {
            "get": {
                "description": "Retrieve details of a specific farm group by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farmGroup"
                ],
                "summary": "Get farm group by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/farmGroup/{id}/farmList": {
            "get": {
                "description": "Retrieve a list of farms associated with a specific farm group by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farmGroup"
                ],
                "summary": "Get list of farms associated with a specific farm group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/farmOnFarmGroup": {
            "post": {
                "description": "Add a farm to a farm group with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farmOnFarmGroup"
                ],
                "summary": "Add a farm to a farm group",
                "parameters": [
                    {
                        "description": "Farm on farm group data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddFarmOnFarmGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/farmOnFarmGroup/{id}": {
            "delete": {
                "description": "Remove a farm from a farm group by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "farmOnFarmGroup"
                ],
                "summary": "Remove a farm from a farm group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm on farm group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/feedcollection": {
            "put": {
                "description": "Update an existing feed collection with new details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedcollection"
                ],
                "summary": "Update a feed collection",
                "parameters": [
                    {
                        "description": "Updated feed collection data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FeedCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new feed collection with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedcollection"
                ],
                "summary": "Add a feed collection",
                "parameters": [
                    {
                        "description": "Feed collection data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddFeedCollection"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/feedcollection/{id}": {
            "get": {
                "description": "Retrieve a feed collection by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedcollection"
                ],
                "summary": "Get a feed collection by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feed collection ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/feedpricehistory": {
            "put": {
                "description": "Update an existing entry in the feed price history with new details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedpricehistory"
                ],
                "summary": "Update a feed price history entry",
                "parameters": [
                    {
                        "description": "Updated feed price history data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FeedPriceHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new entry to the feed price history with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedpricehistory"
                ],
                "summary": "Add a feed price history entry",
                "parameters": [
                    {
                        "description": "Feed price history data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddFeedPriceHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/feedpricehistory/{id}": {
            "get": {
                "description": "Retrieve a feed price history entry by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "feedpricehistory"
                ],
                "summary": "Get a feed price history entry by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Feed price history entry ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/merchant": {
            "put": {
                "description": "Update an existing merchant with new details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchant"
                ],
                "summary": "Update a merchant",
                "parameters": [
                    {
                        "description": "Updated merchant data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Merchant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new merchant with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchant"
                ],
                "summary": "Add a new merchant",
                "parameters": [
                    {
                        "description": "Merchant data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddMerchant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/merchant/{id}": {
            "get": {
                "description": "Retrieve a merchant by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "merchant"
                ],
                "summary": "Get a merchant by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Merchant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/pond": {
            "get": {
                "description": "Retrieve a list of ponds belonging to a specific farm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pond"
                ],
                "summary": "Get a list of ponds by farm ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Farm ID",
                        "name": "farmId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing pond with new details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pond"
                ],
                "summary": "Update a pond",
                "parameters": [
                    {
                        "description": "Updated pond data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Pond"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new pond with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pond"
                ],
                "summary": "Add a new pond",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Pond data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddPond"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/pond/{id}": {
            "get": {
                "description": "Retrieve a pond by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pond"
                ],
                "summary": "Get a pond by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pond ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "description": "Retrieve the user details of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get the current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the details of the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update the current user",
                "parameters": [
                    {
                        "description": "Updated user data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Add a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        },
        "/api/v1/user/list": {
            "get": {
                "description": "Retrieve a list of users associated with the current client ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get a list of users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/httputil.ResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrorResponseModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httputil.ErrorResponseModel": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "400"
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "httputil.ResponseModel": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {},
                "result": {
                    "type": "boolean"
                }
            }
        },
        "models.ActivePond": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "pondId": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.ActivityWithSellDetail": {
            "type": "object",
            "properties": {
                "activePondId": {
                    "type": "integer"
                },
                "activityDate": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "fishType": {
                    "type": "string"
                },
                "fishUnit": {
                    "type": "string"
                },
                "fishWeight": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "merchantId": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "pricePerUnit": {
                    "type": "number"
                },
                "sellDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SellDetail"
                    }
                },
                "toActivePondId": {
                    "type": "integer"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.AddActivePond": {
            "type": "object",
            "properties": {
                "pondId": {
                    "type": "integer"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "models.AddBill": {
            "type": "object",
            "properties": {
                "farmGroupId": {
                    "type": "integer"
                },
                "other": {
                    "type": "string"
                },
                "paidAmount": {
                    "type": "number"
                },
                "paymentDate": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.AddClient": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                }
            }
        },
        "models.AddDailyFeed": {
            "type": "object",
            "properties": {
                "activePondId": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "feedCollectionId": {
                    "type": "integer"
                },
                "feedDate": {
                    "type": "string"
                }
            }
        },
        "models.AddFarm": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.AddFarmGroup": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.AddFarmOnFarmGroup": {
            "type": "object",
            "properties": {
                "farmGroupId": {
                    "type": "integer"
                },
                "farmId": {
                    "type": "integer"
                }
            }
        },
        "models.AddFeedCollection": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "models.AddFeedPriceHistory": {
            "type": "object",
            "properties": {
                "feedCollectionId": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "priceUpdatedDate": {
                    "type": "string"
                }
            }
        },
        "models.AddMerchant": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.AddPond": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.AddSellDetail": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "fishType": {
                    "type": "string"
                },
                "fishUnit": {
                    "type": "string"
                },
                "pricePerUnit": {
                    "type": "number"
                },
                "sellId": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "models.AddUser": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "contactNumber": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "userLevel": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Bill": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "farmGroupId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "other": {
                    "type": "string"
                },
                "paidAmount": {
                    "type": "number"
                },
                "paymentDate": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.Client": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "ownerName": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.CreateActivityRequest": {
            "type": "object",
            "properties": {
                "activePondId": {
                    "type": "integer"
                },
                "activityDate": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                },
                "fishType": {
                    "type": "string"
                },
                "fishUnit": {
                    "type": "string"
                },
                "fishWeight": {
                    "type": "number"
                },
                "merchantId": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "pricePerUnit": {
                    "type": "number"
                },
                "sellDetails": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AddSellDetail"
                    }
                },
                "toActivePondId": {
                    "type": "integer"
                }
            }
        },
        "models.DailyFeed": {
            "type": "object",
            "properties": {
                "activePondId": {
                    "type": "integer"
                },
                "amount": {
                    "type": "number"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "feedCollectionId": {
                    "type": "integer"
                },
                "feedDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.Farm": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.FarmGroup": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.FeedCollection": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "code": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.FeedPriceHistory": {
            "type": "object",
            "properties": {
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "feedCollectionId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "priceUpdatedDate": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.Login": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Merchant": {
            "type": "object",
            "properties": {
                "contactNumber": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.Pond": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "farmId": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.SellDetail": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "fishType": {
                    "type": "string"
                },
                "fishUnit": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pricePerUnit": {
                    "type": "number"
                },
                "sellId": {
                    "type": "integer"
                },
                "size": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "clientId": {
                    "type": "integer"
                },
                "contactNumber": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "createdDate": {
                    "type": "string"
                },
                "delFlag": {
                    "type": "boolean"
                },
                "firstName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastName": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                },
                "updatedDate": {
                    "type": "string"
                },
                "userLevel": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}